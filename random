
# accumulate data in a list, not data frame
data = []
for a, b, c in some_function_that_yields_data():
    data.append([a, b, c])

df = pd.DataFrame(data, columns=['A', 'B', 'C'])



## generate random base CO2 value for each fruit/veggie
#import random
#produce['random_base_value'] = [random.uniform(0.01,0.4)  for k in produce.index]
#print(produce)


# randomly select 10 rows from dataframe
df.sample(n=10)


X_train, X_test, y_train, y_test = train_test_split(X,y, random_state=0)


When the input is all categorical, classification trees and random forests are good techniques.
Gradient Boosting Tree, Neural Network, logistic Regression, Kernel SVM
For categorical data - naive bayes, decision trees and their ensembles including Random forest,
Minimum distance classifiers or KNN type with a cost function different than euclidean distance e.g. hamming distance


